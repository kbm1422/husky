import logging
logger = logging.getLogger(__name__)

import time
from simg.test.framework import TestCase


class BaseJaxTestCase(TestCase):
    def make_connected(self, tx_device, rx_device):
        # rx_gen3_1_state = rx_device.gen3_1.getDevState()
        # rx_gen3_2_state = rx_device.gen3_2.getDevState()
        # if rx_gen3_1_state != "connected":
        #     rx_gen3_1_mac = rx_device.gen3_1.getMacAddress()
        #     tx_device.gen3_1.connect(rx_gen3_1_mac)
        # if rx_gen3_2_state != "connected":
        #     rx_gen3_2_mac = rx_device.gen3_2.getMacAddress()
        #     tx_device.gen3_2.connect(rx_gen3_2_mac)
        # self._test_connection(rx_device)
        pass

    def _test_connection(self, device, warn_time=15, fail_time=50):
        start_time = time.time()
        connected_time = None
        while True:
            gen3_1_state = device.gen3_1.getDevState()
            gen3_2_state = device.gen3_2.getDevState()
            current_time = time.time()
            if current_time - start_time > fail_time:
                break
            if gen3_1_state == "connected" and gen3_2_state == "connected":
                connected_time = current_time
                break
            time.sleep(0.5)
        self.assertIsNotNone(connected_time, "Both Main and Sub need connected in 50s")
        self.assertLessEqual(connected_time-start_time, warn_time,
                             msg="Both Main and Sub connected spend time should less equal than 15s",
                             iswarning=True)
        time.sleep(15)