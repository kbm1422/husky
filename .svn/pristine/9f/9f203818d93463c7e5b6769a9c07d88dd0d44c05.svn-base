#!/usr/bin/python
# -*- coding: utf-8 -*-

import logging
logger = logging.getLogger(__name__)

from simg.test.framework import TestCase, TestContextManager, parametrize
from simg.devadapter.wired.boston import BostonDeviceAdapter
from simg.devadapter.wired.boston.Sii9777RxLib import *


BOOT_STATUS_MAPPER = {
    SII9777_BOOT_STAT__SUCCESS: "SII9777_BOOT_STAT__SUCCESS",
    SII9777_BOOT_STAT__IN_PROGRESS: "SII9777_BOOT_STAT__IN_PROGRESS",
    SII9777_BOOT_STAT__FAILURE: "SII9777_BOOT_STAT__FAILURE"
}

RX_PORT_MAPPER = {
    "SII9777_RX_PORT__0": SII9777_RX_PORT__0,
    "SII9777_RX_PORT__1": SII9777_RX_PORT__1,
    "SII9777_RX_PORT__2": SII9777_RX_PORT__2,
    "SII9777_RX_PORT__3": SII9777_RX_PORT__3
}

TX_PORT_MAPPER = {
    "SII9777_TX_PORT__0": SII9777_TX_PORT__0,
    "SII9777_TX_PORT__1": SII9777_TX_PORT__1,
    "SII9777_TX_PORT__2": SII9777_TX_PORT__2,
}


HDCP_STATUS_MAPPER = {
    SII9777_HDCP_STATUS__OFF: "SII9777_HDCP_STATUS__OFF",
    SII9777_HDCP_STATUS__SUCCESS_1X: "SII9777_HDCP_STATUS__SUCCESS_1X",
    SII9777_HDCP_STATUS__SUCCESS_22: "SII9777_HDCP_STATUS__SUCCESS_22",
    SII9777_HDCP_STATUS__AUTHENTICATING: "SII9777_HDCP_STATUS__AUTHENTICATING",
    SII9777_HDCP_STATUS__FAILED: "SII9777_HDCP_STATUS__FAILED"
}

MSC_SUB_COMMAND_MAPPER = {
    SII9777_MSC_SUB_COMMAND__NONE: "SII9777_MSC_SUB_COMMAND__NONE",
    SII9777_MSC_SUB_COMMAND__RCP: "SII9777_MSC_SUB_COMMAND__RCP",
    SII9777_MSC_SUB_COMMAND__RCPK: "SII9777_MSC_SUB_COMMAND__RCPK",
    SII9777_MSC_SUB_COMMAND__RCPE: "SII9777_MSC_SUB_COMMAND__RCPE",
    SII9777_MSC_SUB_COMMAND__RAP: "SII9777_MSC_SUB_COMMAND__RAP",
    SII9777_MSC_SUB_COMMAND__RAPK: "SII9777_MSC_SUB_COMMAND__RAPK",
    SII9777_MSC_SUB_COMMAND__RBP: "SII9777_MSC_SUB_COMMAND__RBP",
    SII9777_MSC_SUB_COMMAND__RBPK: "SII9777_MSC_SUB_COMMAND__RBPK",
    SII9777_MSC_SUB_COMMAND__RBPE: "SII9777_MSC_SUB_COMMAND__RBPE",
    SII9777_MSC_SUB_COMMAND__UCP: "SII9777_MSC_SUB_COMMAND__UCP",
    SII9777_MSC_SUB_COMMAND__UCPK: "SII9777_MSC_SUB_COMMAND__UCPK",
    SII9777_MSC_SUB_COMMAND__UCPE: "SII9777_MSC_SUB_COMMAND__UCPE"
}

CLR_FMT_MAPPER = {
    SII9777_CLR_FMT__NO_DATA: "SII9777_CLR_FMT__NO_DATA",
    SII9777_CLR_FMT__RGB_F: "SII9777_CLR_FMT__RGB_F",
    SII9777_CLR_FMT__RGB_L: "SII9777_CLR_FMT__RGB_L",
    SII9777_CLR_FMT__XV601: "SII9777_CLR_FMT__XV601",
    SII9777_CLR_FMT__XV709: "SII9777_CLR_FMT__XV709",
    SII9777_CLR_FMT__YC2020_CL: "SII9777_CLR_FMT__YC2020_CL",
    SII9777_CLR_FMT__YC2020_NCL: "SII9777_CLR_FMT__YC2020_NCL",
    SII9777_CLR_FMT__YC601_F: "SII9777_CLR_FMT__YC601_F",
    SII9777_CLR_FMT__YC601_L: "SII9777_CLR_FMT__YC601_L",
    SII9777_CLR_FMT__YC709_F: "SII9777_CLR_FMT__YC709_F",
    SII9777_CLR_FMT__YC709_L: "SII9777_CLR_FMT__YC709_L"
}

CLR_SMPL_MAPPER = {
    SII9777_CR_SMPL__NO_DATA: "SII9777_CR_SMPL__NO_DATA",
    SII9777_CR_SMPL__444: "SII9777_CR_SMPL__444",
    SII9777_CR_SMPL__422: "SII9777_CR_SMPL__422",
    SII9777_CR_SMPL__420: "SII9777_CR_SMPL__420"
}

BIT_DEPTH_MAPPER = {
    SII9777_BIT_DEPTH__NO_DATA: "SII9777_BIT_DEPTH__NO_DATA",
    SII9777_BIT_DEPTH__8: "SII9777_BIT_DEPTH__8",
    SII9777_BIT_DEPTH__10: "SII9777_BIT_DEPTH__10",
    SII9777_BIT_DEPTH__12: "SII9777_BIT_DEPTH__12"
}


@parametrize("device", type=BostonDeviceAdapter, fetch=parametrize.FetchType.LAZY)
class BaseBostonDriverTestCase(TestCase):
    def _test_api_retcode(self, apiname, retcode):
        self.assertEquals(retcode, 0, "%s return code should be SII_RETVAL__SUCCESS" % apiname)
