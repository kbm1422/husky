
import logging
from simg.test.framework import TestCase, parametrize



if __name__ == "__main__":
    logging.basicConfig(
        level=logging.DEBUG,
        format='%(asctime)-15s %(thread)-5d [%(levelname)-8s] - %(message)s'
    )

    @parametrize("attr1", type=int, default=1)
    @parametrize("attr3", type=int, default=3)
    class Test1(TestCase):
        @parametrize("attr2", type=int, default=2)
        def test_func(self):
            self.assertEquals(self.attr1, self.attr2)
    test1 = Test1("test_func")
    test1.run()

    @parametrize("attr1", type=dict, default="{1:1, 2:2}", fetch=parametrize.FetchType.LAZY)
    class Test2(Test1):
        @parametrize("attr2", type=int, default=4)
        def test_func(self):
            self.assertEquals(self.attr1, self.attr2)
    test2 = Test2("test_func")

    test2.run()